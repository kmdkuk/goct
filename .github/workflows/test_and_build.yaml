name: CI

on:
  pull_request:
  push:
    branches:
    - 'main'

env:
  go-version: 1.21

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.title, '[wip]') && !contains(github.event.pull_request.title, '[ci skip]') && !contains(github.event.pull_request.title, '[skip ci]')"
    steps:
      - run: echo "${{ github.event.pull_request.title }}"
  build:
    runs-on: ${{ matrix.os }}
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}
      - name: checkout
        uses: actions/checkout@v4
      - name: build
        run: make build
  test:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}
      - name: checkout
        uses: actions/checkout@v4
      - name: Ensure go.mod is already tidied
        run: go mod tidy && git diff -s --exit-code go.sum
      - name: test
        run: make test
  release-dry-run:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --snapshot --skip=publish --clean
  notification:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: "false" # always()
        with:
          type: ${{ job.status }}
          job_name: "*Build and Debug Check*"
          mention: "here"
          mention_if: "always"
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
          url: ${{ secrets.SLACK_WEBHOOK }}
